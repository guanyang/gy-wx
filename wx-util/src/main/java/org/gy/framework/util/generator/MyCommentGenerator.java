package org.gy.framework.util.generator;

import static org.mybatis.generator.internal.util.StringUtility.isTrue;

import java.util.Properties;

import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.Parameter;
import org.mybatis.generator.config.PropertyRegistry;
import org.mybatis.generator.internal.DefaultCommentGenerator;

public class MyCommentGenerator extends DefaultCommentGenerator {

    private boolean suppressAllComments;

    public MyCommentGenerator() {
        super();
        this.suppressAllComments = false;
    }

    @Override
    public void addConfigurationProperties(Properties properties) {
        super.addConfigurationProperties(properties);
        this.suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));
    }

    @Override
    public void addFieldComment(Field field,
                                IntrospectedTable introspectedTable,
                                IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        field.addJavaDocLine("/**"); //$NON-NLS-1$
        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {
            field.addJavaDocLine(" * " + introspectedColumn.getRemarks());
        } else {
            StringBuilder sb = new StringBuilder();
            field.addJavaDocLine(" * This field was generated by MyBatis Generator."); //$NON-NLS-1$

            sb.append(" * This field corresponds to the database column "); //$NON-NLS-1$
            sb.append(introspectedTable.getFullyQualifiedTable());
            sb.append('.');
            sb.append(introspectedColumn.getActualColumnName());
            field.addJavaDocLine(sb.toString());
        }

        addJavadocTag(field, false);

        field.addJavaDocLine(" */"); //$NON-NLS-1$
    }

    @Override
    public void addSetterComment(Method method,
                                 IntrospectedTable introspectedTable,
                                 IntrospectedColumn introspectedColumn) {

        if (suppressAllComments) {
            return;
        }


        method.addJavaDocLine("/**"); //$NON-NLS-1$

        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {
            method.addJavaDocLine(" * 设置  " + introspectedColumn.getRemarks());
            method.addJavaDocLine(" *");

            Parameter parm = method.getParameters().get(0);
            method.addJavaDocLine(" * @param " + parm.getName() + " " + introspectedColumn.getRemarks());
        } else {
            StringBuilder sb = new StringBuilder();

            method.addJavaDocLine(" * This method was generated by MyBatis Generator."); //$NON-NLS-1$

            sb.append(" * This method sets the value of the database column "); //$NON-NLS-1$
            sb.append(introspectedTable.getFullyQualifiedTable());
            sb.append('.');
            sb.append(introspectedColumn.getActualColumnName());
            method.addJavaDocLine(sb.toString());

            method.addJavaDocLine(" *"); //$NON-NLS-1$

            Parameter parm = method.getParameters().get(0);
            sb.setLength(0);
            sb.append(" * @param "); //$NON-NLS-1$
            sb.append(parm.getName());
            sb.append(" the value for "); //$NON-NLS-1$
            sb.append(introspectedTable.getFullyQualifiedTable());
            sb.append('.');
            sb.append(introspectedColumn.getActualColumnName());
            method.addJavaDocLine(sb.toString());
        }

        addJavadocTag(method, false);

        method.addJavaDocLine(" */"); //$NON-NLS-1$
    }

    @Override
    public void addGetterComment(Method method,
                                 IntrospectedTable introspectedTable,
                                 IntrospectedColumn introspectedColumn) {

        if (suppressAllComments) {
            return;
        }

        method.addJavaDocLine("/**"); //$NON-NLS-1$
        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {
            method.addJavaDocLine(" * 获取  " + introspectedColumn.getRemarks());
            method.addJavaDocLine(" *");
            method.addJavaDocLine(" * @return " + introspectedColumn.getActualColumnName() + " " + introspectedColumn.getRemarks());
        } else {
            StringBuilder sb = new StringBuilder();

            method.addJavaDocLine(" * This method was generated by MyBatis Generator."); //$NON-NLS-1$

            sb.append(" * This method returns the value of the database column "); //$NON-NLS-1$
            sb.append(introspectedTable.getFullyQualifiedTable());
            sb.append('.');
            sb.append(introspectedColumn.getActualColumnName());
            method.addJavaDocLine(sb.toString());
            method.addJavaDocLine(" *"); //$NON-NLS-1$

            sb.setLength(0);
            sb.append(" * @return the value of "); //$NON-NLS-1$
            sb.append(introspectedTable.getFullyQualifiedTable());
            sb.append('.');
            sb.append(introspectedColumn.getActualColumnName());
            method.addJavaDocLine(sb.toString());
        }

        addJavadocTag(method, false);

        method.addJavaDocLine(" */"); //$NON-NLS-1$
    }

    public boolean isSuppressAllComments() {
        return suppressAllComments;
    }

    public void setSuppressAllComments(boolean suppressAllComments) {
        this.suppressAllComments = suppressAllComments;
    }

}
