<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.gy.framework.dao.WxReplyConfigMapper" >
  <resultMap id="BaseResultMap" type="org.gy.framework.model.WxReplyConfig" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="APP_ID" property="appId" jdbcType="VARCHAR" />
    <result column="KEYWORDS" property="keywords" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="REPLY_TEXT" property="replyText" jdbcType="VARCHAR" />
    <result column="REPLY_LINK" property="replyLink" jdbcType="VARCHAR" />
    <result column="REPLY_IMG" property="replyImg" jdbcType="VARCHAR" />
    <result column="REPLY_TYPE" property="replyType" jdbcType="INTEGER" />
    <result column="ENABLE" property="enable" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, APP_ID, KEYWORDS, TITLE, DESCRIPTION, REPLY_TEXT, REPLY_LINK, REPLY_IMG, REPLY_TYPE, 
    ENABLE, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.gy.framework.model.WxReplyConfigExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wx_reply_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from wx_reply_config
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from wx_reply_config
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.gy.framework.model.WxReplyConfigExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from wx_reply_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.gy.framework.model.WxReplyConfig" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into wx_reply_config (APP_ID, KEYWORDS, TITLE, 
      DESCRIPTION, REPLY_TEXT, REPLY_LINK, 
      REPLY_IMG, REPLY_TYPE, ENABLE, 
      CREATE_TIME, UPDATE_TIME)
    values (#{appId,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{replyText,jdbcType=VARCHAR}, #{replyLink,jdbcType=VARCHAR}, 
      #{replyImg,jdbcType=VARCHAR}, #{replyType,jdbcType=INTEGER}, #{enable,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.gy.framework.model.WxReplyConfig" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into wx_reply_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appId != null" >
        APP_ID,
      </if>
      <if test="keywords != null" >
        KEYWORDS,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="replyText != null" >
        REPLY_TEXT,
      </if>
      <if test="replyLink != null" >
        REPLY_LINK,
      </if>
      <if test="replyImg != null" >
        REPLY_IMG,
      </if>
      <if test="replyType != null" >
        REPLY_TYPE,
      </if>
      <if test="enable != null" >
        ENABLE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appId != null" >
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="replyText != null" >
        #{replyText,jdbcType=VARCHAR},
      </if>
      <if test="replyLink != null" >
        #{replyLink,jdbcType=VARCHAR},
      </if>
      <if test="replyImg != null" >
        #{replyImg,jdbcType=VARCHAR},
      </if>
      <if test="replyType != null" >
        #{replyType,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.gy.framework.model.WxReplyConfigExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from wx_reply_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update wx_reply_config
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null" >
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null" >
        KEYWORDS = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.replyText != null" >
        REPLY_TEXT = #{record.replyText,jdbcType=VARCHAR},
      </if>
      <if test="record.replyLink != null" >
        REPLY_LINK = #{record.replyLink,jdbcType=VARCHAR},
      </if>
      <if test="record.replyImg != null" >
        REPLY_IMG = #{record.replyImg,jdbcType=VARCHAR},
      </if>
      <if test="record.replyType != null" >
        REPLY_TYPE = #{record.replyType,jdbcType=INTEGER},
      </if>
      <if test="record.enable != null" >
        ENABLE = #{record.enable,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update wx_reply_config
    set ID = #{record.id,jdbcType=BIGINT},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      KEYWORDS = #{record.keywords,jdbcType=VARCHAR},
      TITLE = #{record.title,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      REPLY_TEXT = #{record.replyText,jdbcType=VARCHAR},
      REPLY_LINK = #{record.replyLink,jdbcType=VARCHAR},
      REPLY_IMG = #{record.replyImg,jdbcType=VARCHAR},
      REPLY_TYPE = #{record.replyType,jdbcType=INTEGER},
      ENABLE = #{record.enable,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.gy.framework.model.WxReplyConfig" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update wx_reply_config
    <set >
      <if test="appId != null" >
        APP_ID = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        KEYWORDS = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="replyText != null" >
        REPLY_TEXT = #{replyText,jdbcType=VARCHAR},
      </if>
      <if test="replyLink != null" >
        REPLY_LINK = #{replyLink,jdbcType=VARCHAR},
      </if>
      <if test="replyImg != null" >
        REPLY_IMG = #{replyImg,jdbcType=VARCHAR},
      </if>
      <if test="replyType != null" >
        REPLY_TYPE = #{replyType,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        ENABLE = #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.gy.framework.model.WxReplyConfig" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update wx_reply_config
    set APP_ID = #{appId,jdbcType=VARCHAR},
      KEYWORDS = #{keywords,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      REPLY_TEXT = #{replyText,jdbcType=VARCHAR},
      REPLY_LINK = #{replyLink,jdbcType=VARCHAR},
      REPLY_IMG = #{replyImg,jdbcType=VARCHAR},
      REPLY_TYPE = #{replyType,jdbcType=INTEGER},
      ENABLE = #{enable,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>